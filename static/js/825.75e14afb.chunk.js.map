{"version":3,"file":"static/js/825.75e14afb.chunk.js","mappings":"sNAIaA,EAAb,iJAIE,WACE,MAAM,IAAIC,MAAM,0BACjB,GANH,iEAOE,yFACQ,IAAIA,MAAM,2BADlB,2CAPF,wIAUE,WAAkCC,GAAlC,4EAIQ,IAAID,MAAM,0BAA4BC,GAJ9C,2CAVF,+HAgBE,yFACQ,IAAID,MAAM,2BADlB,2CAhBF,6IAmBE,WAAuCC,GAAvC,4EAIQ,IAAID,MAAM,0BAA4BC,GAJ9C,2CAnBF,iIAyBE,yFACQ,IAAID,MAAM,2BADlB,2CAzBF,0HA4BE,WAAoBC,GAApB,4EAIQ,IAAID,MAAM,0BAA4BC,GAJ9C,2CA5BF,2HAmCE,WAAoBA,GAApB,4EAIQ,IAAID,MAAM,0BAA4BC,GAJ9C,2CAnCF,4D,QACUC,G","sources":["../node_modules/account-manager/src/web.ts"],"sourcesContent":["import { WebPlugin } from '@capacitor/core';\n\nimport type { AccountManagerPlugin, authData } from './definitions';\n\nexport class AccountManagerWeb\n  extends WebPlugin\n  implements AccountManagerPlugin\n{\n  accountPicker(): Promise<authData> {\n    throw new Error('Method not implemented.');\n  }\n  async getAccount(): Promise<{}> {\n    throw new Error('Method not implemented.');\n  }\n  async getExistingAccountAuthToken(options: {\n    userName: string;\n    authTokenType: string;\n  }): Promise<void> {\n    throw new Error('Method not implemented.' + options);\n  }\n  async showAccountPicker(): Promise<void> {\n    throw new Error('Method not implemented.');\n  }\n  async getTokenForAccountCreateIfNeeded(options: {\n    accountType: string;\n    authTokenType: string;\n  }): Promise<void> {\n    throw new Error('Method not implemented.' + options);\n  }\n  async invalidateAuthToken(): Promise<void> {\n    throw new Error('Method not implemented.');\n  }\n  async addNewAccount(options: {\n    accountType: string;\n    authTokenType: string;\n  }): Promise<void> {\n    throw new Error('Method not implemented.' + options);\n  }\n\n  async authenticator(options: {\n    userName: string;\n    AccountType: string;\n  }): Promise<void> {\n    throw new Error('Method not implemented.' + options);\n  }\n}\n"],"names":["AccountManagerWeb","Error","options","WebPlugin"],"sourceRoot":""}