{"version":3,"file":"static/js/825.60fe1aee.chunk.js","mappings":"sNAIaA,EAAb,iJACE,WACE,MAAM,IAAIC,MAAM,0BACjB,GAHH,iEAIE,yFACQ,IAAIA,MAAM,2BADlB,2CAJF,wIAOE,WAAkCC,GAAlC,4EACQ,IAAID,MAAM,0BAA4BC,GAD9C,2CAPF,+HAUE,yFACQ,IAAID,MAAM,2BADlB,2CAVF,6IAaE,WAAuCC,GAAvC,4EACQ,IAAID,MAAM,0BAA4BC,GAD9C,2CAbF,iIAgBE,WAA0BA,GAA1B,4EACQ,IAAID,MAAM,0BAA4BC,GAD9C,2CAhBF,2HAmBE,WAAoBA,GAApB,4EACQ,IAAID,MAAM,0BAA4BC,GAD9C,2CAnBF,2HAuBE,WAAoBA,GAApB,4EACQ,IAAID,MAAM,0BAA4BC,GAD9C,2CAvBF,4D,QAAuCC,G","sources":["../node_modules/account-manager/src/web.ts"],"sourcesContent":["import { WebPlugin } from '@capacitor/core';\n\nimport type { AccountManagerPlugin } from './definitions';\n\nexport class AccountManagerWeb extends WebPlugin implements AccountManagerPlugin {\n  accountPicker(): Promise<{}> {\n    throw new Error('Method not implemented.');\n  }\n  async getAccount(): Promise<{}> {\n    throw new Error('Method not implemented.');\n  }\n  async getExistingAccountAuthToken(options: { account: any; authTokenType: string; }): Promise<void> {\n    throw new Error('Method not implemented.' + options);\n  }\n  async showAccountPicker(): Promise<void> {\n    throw new Error('Method not implemented.');\n  }\n  async getTokenForAccountCreateIfNeeded(options: { accountType: string; authTokenType: string; }): Promise<void> {\n    throw new Error('Method not implemented.' + options);\n  }\n  async invalidateAuthToken(options: { account: any; authTokenType: string; }): Promise<void> {\n    throw new Error('Method not implemented.' + options);\n  }\n  async addNewAccount(options: { accountType: string; authTokenType: string; }): Promise<void> {\n    throw new Error('Method not implemented.' + options);\n  }\n\n  async authenticator(options: { userName: string; AccountType: string; }): Promise<void> {\n    throw new Error('Method not implemented.' + options);\n  }\n}\n"],"names":["AccountManagerWeb","Error","options","WebPlugin"],"sourceRoot":""}